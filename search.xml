<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Docker入门及基础操作]]></title>
      <url>http://shihd.github.io/2016/11/03/%E6%8A%80%E6%9C%AF%E8%B5%84%E6%96%99%E2%80%94%E2%80%94Docker%E5%85%A5%E9%97%A8%E5%8F%8A%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<p><img src="https://www.docker.com/sites/default/files/moby.svg" alt=""></p>
<h1 id="Docker是什么？"><a href="#Docker是什么？" class="headerlink" title="Docker是什么？"></a>Docker是什么？</h1><p>Docker的中文本意是码头工人，用于搬运货柜。<a href="https://www.docker.com/" target="_blank" rel="external">Docker官网</a>给出的解释是Docker是世界领先的软件货柜运输平台。通俗来说就是Docker就是一个可以将软件打包在一个标准的“货柜”里，并可以轻松迁移的平台。</p>
<h1 id="Docker有什么作用？"><a href="#Docker有什么作用？" class="headerlink" title="Docker有什么作用？"></a>Docker有什么作用？</h1><p>Docker容器打包软件到一个包含了所有运行所需环境（代码、运行时状态、系统工具、系统库——任何可以被安装在服务器上的环境）的文件系统里，这样软件无论被迁移到哪里都是同样的运行环境。<br>通俗来说就是开发环境如果没有问题，用Docker打包成容器在服务器上运行，至少不会遇到环境问题。<br>还有像我这样使用Mac开发的程序员，如果需要开发oracle数据库，本地是无法安装oracle的，可以通过docker运行一个oracle镜像。</p>
<h1 id="Docker的特点"><a href="#Docker的特点" class="headerlink" title="Docker的特点"></a>Docker的特点</h1><p><strong>轻量性</strong><br>运行在一台机器上的容器共享其操作系统内核，它们启动使用更少的内存。Docker的镜像文件可以通过分层的文件系统及共享的公共文件创建（说白了就是Docker的镜像文件可以在其他镜像基础上创建并且还可以共享使用其他镜像或操作系统的文件，这样镜像文件就很小），节省磁盘空间并提高下载效率。</p>
<p><strong>开放性</strong><br>Docker容器基于开放标准，使容器能够在所有的主流Linux及windows或者其他设备的顶层运行。</p>
<p><strong>默认安全性</strong><br>容器隔离彼此和基础架构应用，同时为应用程序提供了额外的保护层。</p>
<h1 id="Docker容器与虚拟机比较"><a href="#Docker容器与虚拟机比较" class="headerlink" title="Docker容器与虚拟机比较"></a>Docker容器与虚拟机比较</h1><p><strong>虚拟机</strong><br><img src="https://www.docker.com/sites/default/files/WhatIsDocker_2_VMs_0-2_2.png" alt=""><br>虚拟机系统包含应用程序、必要的二进制文件和库和一个完整的客体操作系统，所有这些加起来至少几十GB。</p>
<p><strong>Docker容器</strong><br><img src="https://www.docker.com/sites/default/files/WhatIsDocker_3_Containers_2_0.png" alt=""><br>Docker容器包含应用程序及其所需依赖，在主机操作系统上运行时，共享主机操作系统内核，每个容器都作为独立进程运行。Docker容器不限制设备型号等，可以运行在所有的设备上。</p>
<h1 id="Docker安装"><a href="#Docker安装" class="headerlink" title="Docker安装"></a>Docker安装</h1><p><strong>Mac上安装</strong><br>请参阅<a href="https://www.docker.com/products/docker#/mac" target="_blank" rel="external">Docker官网-Docker for Mac</a></p>
<p><strong>Windows上安装</strong><br>请参阅<a href="https://www.docker.com/products/docker#/windows" target="_blank" rel="external">Docker官网-Docker for Windows</a></p>
<p><strong>Windows Server上安装</strong><br>请参阅<a href="https://www.docker.com/products/docker#/windows-server" target="_blank" rel="external">Docker官网-Docker for Windows Server</a></p>
<p><strong>Linux上安装</strong><br>请参阅<a href="https://www.docker.com/products/docker#/linux" target="_blank" rel="external">Docker官网-Docker for Linux</a></p>
<p><strong>AWS上安装</strong><br>请参阅<a href="https://www.docker.com/products/docker#/AWS" target="_blank" rel="external">Docker官网-Docker for AWS</a></p>
<p><strong>AZURE上安装</strong><br>请参阅<a href="https://www.docker.com/products/docker#/azure" target="_blank" rel="external">Docker官网-Docker for AZURE</a></p>
<h1 id="Docker基础操作"><a href="#Docker基础操作" class="headerlink" title="Docker基础操作"></a>Docker基础操作</h1><h2 id="搜索镜像"><a href="#搜索镜像" class="headerlink" title="搜索镜像"></a>搜索镜像</h2><p>作为初学者和实用主义者，建议先学习使用别人的镜像，即方便又简单，网上有很多牛人制作好的镜像文件，我只需找到它们直接使用即可，可大大减少我们搭建环境的时间。</p>
<p><strong>方法一：访问Docker Hub网站搜索</strong></p>
<ol>
<li><p>首先通过浏览器访问<a href="https://thumbnail0.baidupcs.com/thumbnail/ad11a6ace6b0c00d2eae74b91ff43ff6?fid=84203906-250528-5013268691198&amp;time=1478142000&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-YDAwZIoH8nGaUgnsikpr4yMxGqk%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7130836332173189277&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" target="_blank" rel="external">Docker Hub网站</a></p>
</li>
<li><p>在右上角的搜索栏中输入要搜做的镜像关键字，如：tomcat，返回如下页面：<br><img src="https://thumbnail0.baidupcs.com/thumbnail/f0936a29ec7f652e08f98e2bcf2bea97?fid=84203906-250528-620365329349745&amp;time=1478142000&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-u7CmE%2Bs3M8PMpi8VCMDNyD5sMLI%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7130867337864461724&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""></p>
</li>
<li><p>选择需要使用镜像，如：<br><img src="https://thumbnail0.baidupcs.com/thumbnail/0d22e51e47b213a2cd9321fe04cefd3e?fid=84203906-250528-997114798142731&amp;time=1478142000&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-aVp3lDWktAl7kO8top3J9yL9a4Q%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7130884335168457713&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""></p>
</li>
<li><p>查看镜像详细<br><img src="https://thumbnail0.baidupcs.com/thumbnail/699613aa7790321f59d873ffc15a6d4c?fid=84203906-250528-804973043631052&amp;time=1478142000&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-lwFii%2BehFMAgISO4hhSBCRjtZ7Q%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7130916139398014865&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""></p>
</li>
</ol>
<p><strong>方法二：通过命令行搜索</strong><br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>docker search tomcat</div></pre></td></tr></table></figure></p>
<p><img src="https://thumbnail0.baidupcs.com/thumbnail/6a076398530bd173112428ada7781738?fid=84203906-250528-578053534290918&amp;time=1478142000&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-b797f3IhyrOvooWCKa9dSzPzwNo%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7130939327347652646&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""></p>
<h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><p>在命令行模式下键入以下命令<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>docker pull tomcat</div></pre></td></tr></table></figure></p>
<p>其中“tomcat”是镜像名（name)，该命令可以在Docker Hub官网上搜索到的镜像详细中查看到<br><img src="https://thumbnail0.baidupcs.com/thumbnail/704f857dbd2f6409090eff114f6551cc?fid=84203906-250528-791826629172938&amp;time=1478102400&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-yq3qLvB7ovZbL9Ys%2BD4tjQOgBJE%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7120315333052316484&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""></p>
<h2 id="查看本地镜像列表"><a href="#查看本地镜像列表" class="headerlink" title="查看本地镜像列表"></a>查看本地镜像列表</h2><p>在命令行模式下键入以下命令<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>docker images</div></pre></td></tr></table></figure></p>
<p><img src="https://thumbnail0.baidupcs.com/thumbnail/674ccd1a1b64ddc818790a2302a58f63?fid=84203906-250528-6509480121500&amp;time=1478131200&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-5RAXuvLEuRKCpRdn%2FujD%2FD1YC7Q%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7128874349467814256&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""><br>其中“image id”为镜像编号</p>
<h2 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h2><p>在命令行模式下键入以下命令<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker rmi <span class="string">[image id]</span></div></pre></td></tr></table></figure></p>
<p>其中“[image id]”替换为具体的镜像“image id”<br>镜像删除时不能有该镜像的容器存在，无论是运行中的还是停止的</p>
<h2 id="启动镜像成容器"><a href="#启动镜像成容器" class="headerlink" title="启动镜像成容器"></a>启动镜像成容器</h2><p>在命令行模式下键入以下命令<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="built_in">run</span> -<span class="keyword">it</span> <span class="comment">--rm -p 8888:8080 tomcat:latest</span></div></pre></td></tr></table></figure></p>
<p>其中“-it”代表开启交互功能，即容器内tomcat启动日志你将能看到。<br>其中“—rm”代表当启动的容器停止后自动删除该容器（不是镜像哦）。<br>其中“-p 8888:8080”代表将容器中的8080端口映射到本地机器的8888端口上，即我们可以通过localhost:8888端口访问到tomcat，甚至我可以改变本地端口来启动多个tomcat容器。<br>最后的“tomcat:latest”代表启动的容器名称及其版本标签。<br>还有很多其他的docker run的参数请查看<a href="https://docs.docker.com/engine/reference/commandline/run/" target="_blank" rel="external">docker官网-文档-run</a><br>该条启动命令可以在Docker Hub上该镜像的详细说明中查看，其中会有多种启动方式说明<br><img src="https://thumbnail0.baidupcs.com/thumbnail/8fff357c75c9d81fa384ac396e0b6f34?fid=84203906-250528-921544327446704&amp;time=1478134800&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-kKrxmbbD%2FSU1fs0S0iSbaGtpvGM%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7129228742554344936&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""></p>
<h2 id="查看运行中的容器"><a href="#查看运行中的容器" class="headerlink" title="查看运行中的容器"></a>查看运行中的容器</h2><p>在命令行模式下键入以下命令<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>docker ps</div></pre></td></tr></table></figure></p>
<p><img src="https://thumbnail0.baidupcs.com/thumbnail/30330e9aa6bab22e1dd5bdc9d558d9b2?fid=84203906-250528-602287643934779&amp;time=1478134800&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-JQYRwAgDsrzrMvMSHreTJWzXNUU%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7129345890271836687&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""><br>其中“container id”为容器编号，下面的操作将与它相关</p>
<h2 id="进入运行中的容器内部执行命令"><a href="#进入运行中的容器内部执行命令" class="headerlink" title="进入运行中的容器内部执行命令"></a>进入运行中的容器内部执行命令</h2><p>有时容器的设置并不能满足我们的需要，比如，我们可能需要增加一个tomcat用户，或是配置一个数据源连接池等，需要进入容器中修改参数，下面我们就介绍下如何进入容器中。<br>在命令行模式下键入以下命令<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker exec -<span class="keyword">it</span> [container <span class="built_in">id</span>] /bin/bash</div></pre></td></tr></table></figure></p>
<p>就可以进入容器内的命令行模式，其中“[container id]”在执行时替换为具体容器的container id<br><img src="https://thumbnail0.baidupcs.com/thumbnail/55888bc5d95c48e6625968f967ec65ae?fid=84203906-250528-814190037637253&amp;time=1478134800&amp;rt=sh&amp;sign=FDTAER-DCb740ccc5511e5e8fedcff06b081203-G1BubTlX3Whjh3sw7IipBQvHLLM%3D&amp;expires=8h&amp;chkv=0&amp;chkbd=0&amp;chkpc=&amp;dp-logid=7129442585824245097&amp;dp-callid=0&amp;size=c710_u400&amp;quality=100" alt=""></p>
<h2 id="停止运行中的容器"><a href="#停止运行中的容器" class="headerlink" title="停止运行中的容器"></a>停止运行中的容器</h2><p>在命令行模式下键入以下命令<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="keyword">stop</span> [<span class="keyword">container</span> <span class="keyword">id</span>]</div></pre></td></tr></table></figure></p>
<p>其中“[container id]”在执行时替换为具体容器的“container id”</p>
<h2 id="查看停止状态的容器"><a href="#查看停止状态的容器" class="headerlink" title="查看停止状态的容器"></a>查看停止状态的容器</h2><p>在命令行模式下键入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker ps <span class="_">-a</span></div></pre></td></tr></table></figure></p>
<h2 id="启动停止状态的容器"><a href="#启动停止状态的容器" class="headerlink" title="启动停止状态的容器"></a>启动停止状态的容器</h2><p>在命令行模式下键入以下命令<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="keyword">start</span> [<span class="keyword">container</span> <span class="keyword">id</span>]</div></pre></td></tr></table></figure></p>
<p>其中“[container id]”在执行时替换为具体容器的“container id”</p>
<h2 id="删除的容器"><a href="#删除的容器" class="headerlink" title="删除的容器"></a>删除的容器</h2><p>在命令行模式下键入以下命令<br><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker rm <span class="string">[container id]</span></div></pre></td></tr></table></figure></p>
<p>其中“[container id]”在执行时替换为具体容器的“container id”</p>
<h2 id="提交容器成为新的镜像"><a href="#提交容器成为新的镜像" class="headerlink" title="提交容器成为新的镜像"></a>提交容器成为新的镜像</h2><p>在命令行模式下键入以下命令<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="keyword">commit</span> [<span class="keyword">container</span> <span class="keyword">id</span>] [your <span class="keyword">name</span>]/[image <span class="keyword">name</span>]:[tag]</div></pre></td></tr></table></figure></p>
<p>其中“[container id]”在执行时替换为具体容器的“container id”<br>其中“[your name]”在执行时替换为你的名字，方便大家知道是你做的镜像<br>其中“[image name]”在执行时替换为你希望的镜像名称<br>其中“[tag]”在执行时替换为你的镜像的版本，也可以不指定<br>详细“docker commit”说明请参考<a href="https://docs.docker.com/engine/reference/commandline/commit/" target="_blank" rel="external">docker官网-文档-commit</a></p>
<h2 id="导出镜像"><a href="#导出镜像" class="headerlink" title="导出镜像"></a>导出镜像</h2><p>在命令行模式下键入以下命令<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker save [image <span class="built_in">name</span>] &gt; [<span class="keyword">local</span> <span class="built_in">file</span> <span class="built_in">name</span>].tar</div></pre></td></tr></table></figure></p>
<p>其中“[container id]”在执行时替换为具体镜像的名字<br>其中“[local file name]”在执行时替换为你想取的本地文件名</p>
<h2 id="载入镜像"><a href="#载入镜像" class="headerlink" title="载入镜像"></a>载入镜像</h2><p>在命令行模式下键入以下命令<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker <span class="keyword">load</span> &lt; [<span class="keyword">local</span> <span class="keyword">file</span> <span class="keyword">full</span> <span class="keyword">name</span>]</div></pre></td></tr></table></figure></p>
<p>其中“[local file full name]” 在执行时替换为本地文件名（含扩展名）</p>
]]></content>
    </entry>
    
  
  
</search>
